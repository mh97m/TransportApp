name: Deploy Laravel Frontend to GitHub Pages

on:
  push:
    branches: ["main"]  # Changed to 'main' if that's your default branch
  pull_request:
    branches: ["main"]  # Same for pull requests

permissions:
  contents: write  # Allows write access to repository content
  pages: write     # Required to deploy to GitHub Pages
  id-token: write  # Required to authenticate and deploy to GitHub Pages

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v4

    # Step 2: Set Up PHP
    - name: Set Up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'

    # Step 3: Copy .env File
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    # Step 4: Install Laravel Dependencies
    - name: Install PHP Dependencies
      run: composer install --prefer-dist # --no-dev 

    # Step 5: Generate Application Key
    - name: Generate Application Key
      run: php artisan key:generate

    # Step 6: Set Directory Permissions
    - name: Set Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    # Step 7: Set Up SQLite Database
    - name: Setup SQLite Database
      run: |
        mkdir -p database
        touch database/database.sqlite

    # Step 8: Run Migrations and Seeders
    - name: Run Migrations and Seeders
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan migrate --seed

    # Step 9: Set Up Node.js
    - name: Set Up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: "18"

    # Step 10: Install Node.js Dependencies
    - name: Install Node Dependencies
      run: npm install

    # Step 11: Build Frontend Assets
    - name: Build Frontend Assets
      run: npm run build

    # Step 12: Prepare Deployment Directory
    - name: Copy Frontend Files
      run: |
        mkdir public-deploy
        cp -R public/* public-deploy/
        touch public-deploy/.nojekyll

    # Step 13: Debug Deployment Directory
    - name: Debug Deployment Directory
      run: ls -la public-deploy

    # Step 14: Set Git Remote
    - name: Set Git Remote
      run: |
        git remote set-url origin https://github.com/mh97m/TransportApp.git
        git fetch --unshallow

    # Step 15: Deploy to GitHub Pages
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}  # Ensure this token has the right permissions
        publish_dir: ./public-deploy
        force_orphan: true
